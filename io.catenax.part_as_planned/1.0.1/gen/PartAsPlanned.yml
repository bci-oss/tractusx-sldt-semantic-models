---
openapi: 3.0.3
info:
  title: Part as Planned
  version: v1
servers:
- url: catenax.io/api/v1
  variables:
    api-version:
      default: v1
paths:
  /{tenant-id}/part-as-planned:
    get:
      tags:
      - PartAsPlanned
      operationId: getPartAsPlanned
      parameters:
      - name: tenant-id
        in: path
        description: The ID of the tenant owning the requested Twin.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          $ref: '#/components/responses/PartAsPlanned'
        "401":
          $ref: '#/components/responses/ClientError'
        "402":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFoundError'
components:
  schemas:
    ErrorResponse:
      type: object
      required:
      - error
      properties:
        error:
          $ref: '#/components/schemas/Error'
    Error:
      type: object
      required:
      - details
      properties:
        message:
          type: string
          minLength: 1
        path:
          type: string
          minLength: 1
        details:
          type: object
          minLength: 1
          additionalProperties:
            type: object
        code:
          type: string
          nullable: true
    urn_samm_io.catenax.part_as_planned_1.0.1_CatenaXIdTrait:
      type: string
      description: "The provided regular expression ensures that the UUID is composed\
        \ of five groups of characters separated by hyphens, in the form 8-4-4-4-12\
        \ for a total of 36 characters (32 hexadecimal characters and 4 hyphens)."
      pattern: "(^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$)|(^urn:uuid:[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$)"
    urn_samm_io.catenax.part_as_planned_1.0.1_PartIdCharacteristic:
      type: string
      description: "The part ID is a multi-character string, ususally assigned by\
        \ an ERP system"
    urn_samm_io.catenax.part_as_planned_1.0.1_PartNameCharacteristic:
      type: string
      description: Part Name in string format from the respective system in the value
        chain
    urn_samm_io.catenax.part_as_planned_1.0.1_ClassificationEnumerationCharacteristic:
      type: string
      description: "A part type must be placed into one of the following classes:\
        \ 'component', 'product', 'software', ‘assembly’, 'tool', or 'raw material'."
      enum:
      - product
      - raw material
      - software
      - assembly
      - tool
      - component
    urn_samm_io.catenax.part_as_planned_1.0.1_PartTypeInformationCharacteristic:
      description: The characteristics of the part type
      type: object
      properties:
        manufacturerPartId:
          description: |-
            Part ID as assigned by the manufacturer of the part. The Part ID identifies the part in the manufacturer`s dataspace. The Part ID references a specific version of a part. The version number must be included in the Part ID if it is available.

            The Part ID does not reference a specific instance of a part and must not be confused with the serial number.
          $ref: '#/components/schemas/urn_samm_io.catenax.part_as_planned_1.0.1_PartIdCharacteristic'
        nameAtManufacturer:
          description: Name of the part as assigned by the manufacturer
          $ref: '#/components/schemas/urn_samm_io.catenax.part_as_planned_1.0.1_PartNameCharacteristic'
        classification:
          description: The classification of the part type according to STEP standard
            definition
          $ref: '#/components/schemas/urn_samm_io.catenax.part_as_planned_1.0.1_ClassificationEnumerationCharacteristic'
      required:
      - manufacturerPartId
      - nameAtManufacturer
      - classification
    urn_samm_org.eclipse.esmf.samm_characteristic_2.1.0_Timestamp:
      type: string
      pattern: "-?([1-9][0-9]{3,}|0[0-9]{3})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\\
        .[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?"
      description: Describes a Property which contains the date and time with an optional
        timezone.
    urn_samm_io.catenax.part_as_planned_1.0.1_ValidityPeriodCharacteristic:
      description: Characteristic to define a continuous validity period.
      type: object
      properties:
        validFrom:
          description: Start date of validity period
          $ref: '#/components/schemas/urn_samm_org.eclipse.esmf.samm_characteristic_2.1.0_Timestamp'
        validTo:
          description: End date of validity period
          $ref: '#/components/schemas/urn_samm_org.eclipse.esmf.samm_characteristic_2.1.0_Timestamp'
    PartAsPlanned:
      description: 'A Part as Planned represents an item in the Catena-X Bill of Material
        (BOM) in As-Planned lifecycle status in a specific version. '
      type: object
      properties:
        catenaXId:
          description: "The fully anonymous Catena-X ID of the serialized part, valid\
            \ for the Catena-X dataspace."
          $ref: '#/components/schemas/urn_samm_io.catenax.part_as_planned_1.0.1_CatenaXIdTrait'
        partTypeInformation:
          description: The part type from which the serialized part has been instantiated
          $ref: '#/components/schemas/urn_samm_io.catenax.part_as_planned_1.0.1_PartTypeInformationCharacteristic'
        validityPeriod:
          description: The period of time during which the Part is offered by the
            manufacturer and can be purchased by customers.
          $ref: '#/components/schemas/urn_samm_io.catenax.part_as_planned_1.0.1_ValidityPeriodCharacteristic'
      required:
      - catenaXId
      - partTypeInformation
  responses:
    Unauthorized:
      description: The requesting user or client is not authenticated.
    Forbidden:
      description: The requesting user or client is not authorized to access resources
        for the given tenant.
    NotFoundError:
      description: The requested Twin has not been found.
    ClientError:
      description: Payload or user input is invalid. See error details in the payload
        for more.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    PartAsPlanned:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartAsPlanned'
      description: The request was successful.
  requestBodies:
    PartAsPlanned:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartAsPlanned'
